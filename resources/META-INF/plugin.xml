<idea-plugin>
  <id>cappuccino.intellij.plugin</id>
  <name>Objective-J Language Plugin</name>
  <version>0.1</version>
  <vendor url="https://github.com/bedalton/cappuccino_plugin">Cappuccino Plugin GitHub Page</vendor>

  <description><![CDATA[
<h1>Objective-J Language plugin</h1>
<p>Provides basic autocomplete functionality for selector methods and variable names</p>

<br/>
<h2>Note</h2>
<ul>
	<li>Variable type resolution is not accurately implemented which causes suggestion of any method selector, even if not applicable to variable's type</li>
	<li>This plugin requires the original source files for the cappuccino framework to work. They can be downloaded
		from the Cappuccino github page(<a href="https://github.com/cappuccino/cappuccino" alt="Cappuccino's GitHub Page">Link</a>)
	</li>
	<li>
		<p>Plugin does <b>NOT</b> use Intellij's javascript plugin<br/></p>
		<ul>
			<li><i>Javascript completion and error checking is not provided</i></li>
		</ul>
	</li>
</ul>
<br/>
<br/>
<h2>Working</h2>
<ul>
	<li>Non-Intelligent method call selector completion</li>
	<li>Variable name completion</li>
	<li>Variable, Function and Method declaration resolution</li>
	<li>Syntax Highlighting</li>
	<li>Invalid method call selector warnings</li>
</ul>
<br/>
<br/>
<h2>Future</h2>
<ul>
	<li>Add rename support for method selectors (removed original implementation due to problems with rename scope)</li>
	<li>Restrict suggestions to imported files</li>
	<li>Implement variable type resolution to provide better autocompletion suggestions</li>
	<li>Use framework decompiler to allow plugin to work without requiring source</li>
</ul>
    ]]></description>

  <change-notes><![CDATA[

    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="173.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <project-components>
    <!--component>
      <implementation-class>cappuccino.intellij.plugin.support.ObjectiveJPluginController</implementation-class>
    </component-->
  </project-components>

  <actions>
  </actions>

  <extensions defaultExtensionNs="com.intellij">

    <!-- ObjJLang -->
    <fileTypeFactory implementation="cappuccino.ide.intellij.plugin.lang.ObjJFileTypeFactory"/>
    <lang.parserDefinition language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.parser.ObjJParserDefinition"/>
    <!-- Highlighting -->
    <lang.syntaxHighlighterFactory key="ObjectiveJ"
                                   implementationClass="cappuccino.ide.intellij.plugin.lang.ObjJSyntaxHighlighterFactory"/>
    <additionalTextAttributes scheme="Default" file="colorSchemes/ObjJColorSchemeDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorSchemes/ObjJColorSchemeDarcula.xml"/>
    <colorSettingsPage implementation="cappuccino.ide.intellij.plugin.lang.ObjJColorSettingsPage"/>

    <!-- ObjJ Libraries -->
    <!--sdkType implementation="cappuccino.ide.intellij.plugin.lang.ObjJSDKType" /-->

    <!-- FORMATTING -->
    <lang.foldingBuilder language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.structure.ObjJCodeFoldingBuilder" />
    <lang.psiStructureViewFactory language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.structure.ObjJStructureViewFactory" />
    <lang.smartEnterProcessor implementationClass="cappuccino.ide.intellij.plugin.fixes.ObjJSmartEnterProcessor" language="ObjectiveJ"/>

    <!-- Completion and Rename -->
    <lang.findUsagesProvider language="ObjectiveJ"
                             implementationClass="cappuccino.ide.intellij.plugin.contributor.ObjJFindUsagesProvider"/>
    <psi.referenceContributor implementation="cappuccino.ide.intellij.plugin.contributor.ObjJReferenceContributor"/>
    <completion.contributor language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.contributor.ObjJCompletionContributor" />
    <lang.braceMatcher language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.contributor.ObjJBraceMatcher"/>
    <quoteHandler fileType="ObjectiveJ" className="cappuccino.ide.intellij.plugin.formatting.ObjJQuoteHandler"/>
    <enterBetweenBracesDelegate language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.formatting.ObjJEnterBetweenBracesDelegate" />
    <lang.namesValidator language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.contributor.ObjJNameValidator" />
    <vetoRenameCondition implementation="cappuccino.ide.intellij.plugin.contributor.ObjJRenameVetoCondition" />

    <!-- Annotators -->
    <annotator language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.annotator.ObjJAnnotator" />
    <annotator language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.annotator.ObjJSyntaxHighlighterAnnotator" />
    <!--codeInsight.parameterInfo language="ObjectiveJ" implementationClass="cappuccino.ide.intellij.plugin.contributor.handlers.ObjJParameterInfo" / -->
    <problemFileHighlightFilter implementation="cappuccino.ide.intellij.plugin.lang.ObjJProblemFileHighlighterFilter" />

    <!-- Indices -->
    <applicationService serviceInterface="cappuccino.ide.intellij.plugin.indices.StubIndexService"
                        serviceImplementation="cappuccino.ide.intellij.plugin.indices.ObjJIndexService" />
    <stubElementTypeHolder class="cappuccino.ide.intellij.plugin.stubs.types.ObjJStubTypes"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJClassDeclarationsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJClassInheritanceIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJClassInstanceVariableAccessorMethodIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJClassMethodIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJFilesByNameIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJFunctionsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJGlobalVariableNamesIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJGlobalVariablesByFileNameIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJImplementationCategoryDeclarationsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJImplementationDeclarationsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJImportsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJInstanceVariablesByClassIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJInstanceVariablesByNameIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJMethodCallIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJMethodFragmentIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJParentClassChildrenIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJParentClassesByChildIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJProtocolDeclarationsIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJSelectorInferredMethodIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJUnifiedMethodIndex"/>
    <stubIndex implementation="cappuccino.ide.intellij.plugin.indices.ObjJVariableNameByScopeIndex"/>


    <!-- =============================== -->
    <!-- ============ PLIST ============ -->
    <!-- =============================== - ->
    <lang.braceMatcher language="ObjJPlist" implementationClass="cappuccino.ide.intellij.plugin.extensions.plist.ObjJPlistBraceMatcher"/>
    <lang.parserDefinition language="ObjJPlist" implementationClass="cappuccino.ide.intellij.plugin.extensions.plist.ObjJPlistParserDefinition"/>
    <lang.syntaxHighlighterFactory key="ObjJPlist"
                                   implementationClass="cappuccino.ide.intellij.plugin.extensions.plist.ObjJPlistSyntaxHighlighterFactory"/>
                                   -->
  </extensions>
</idea-plugin>