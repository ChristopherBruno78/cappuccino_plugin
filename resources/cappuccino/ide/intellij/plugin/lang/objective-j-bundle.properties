# General
objective-j.language.name=Objective-J
objective-j.general.defined-in-file.text = defined in file: {0}
objective-j.general.defined-in-class.text = defined in class: {0}

#Action: New File
objective-j.actions.new-file.title=Objective-J File
objective-j.actions.new-file.description=Create a new Objective-J file for the Cappuccino web framework
objective-j.actions.new-file.invalid=Invalid file name

#Settings: Resolve types
objective-j.settings.resolve.title=Resolve Types
objective-j.settings.resolve.calltarget.checkbox=Attempt to resolve variable types through assignments
objective-j.settings.resolve.filterTypeScrict.checkbox=Strict method filtering if type has been inferred (possibly inaccurate)

#Settings: Class Ignores
objective-j.settings.classes.underscore.title=Classes Prefixed With Underscores
objective-j.settings.classes.underscore.checkbox=Ignore methods and classes marked with an underscore outside file
objective-j.settings.ignore.unqualified.title=Unqualified Ignore Statements
objective-j.settings.ignore.unqualified.description=If @ignore statement is unqualified, how should the statement be treated
objective-j.settings.ignore.unqualified.option.removeMethod=Remove method from completion outside of file
objective-j.settings.ignore.unqualified.option.undeclaredVariables=Ignore all potentially undeclared variables inside scope
objective-j.settings.ignore.unqualified.option.conflictingMethodDecs=Ignore conflicting method declaration errors
objective-j.settings.ignore.unqualified.option.methodReturnValueErrors=Ignore all method return errors
objective-j.settings.ignore.unqualified.option.invalidSelectors=Ignore invalid selector errors

# Settings; Global Ignores
objective-j.settings.global-ignores.title=Globally Ignored Values
objective-j.settings.global-ignores.variableNames.title=Disable Undeclared variable names for:
objective-j.settings.global-ignores.variableNames.hint=Variables should be separated by a comma
objective-j.settings.global-ignores.methodSelectors.title=Disable Invalid Selectors errors on:
objective-j.settings.global-ignores.methodSelectors.hint=Selectors should be separated by comma and use the format\nsel1:sel2:sel3
objective-j.settings.global-ignores.function-names.title = Disable Invalid Selectors errors on:
objective-j.settings.global-ignores.function-names.hint = Function names should be separated by comma and use the format\naFunction, anotherFunction

# Annotator: Implementation
objective-j.annotator-messages.implementation-annotator.undef-category-base-class.message = Category references undefined implementation: <{0}>
objective-j.annotator-messages.implementation-annotator.undec-protocol.message = Protocol with name <{0}> does not exist in project
objective-j.annotator-messages.implementation-annotator.missing-protocol-methods.message = Missing required protocol methods
objective-j.annotator-messages.implementation-annotator.instance-var.undec-class.message = Failed to locate class with name <{0}>
objective-j.annotator-messages.implementation-annotator.instance-var.possibly-undec-class.message = Class <{0}> is possibly undefined

# Annotator: Method call
objective-j.annotator-messages.method-call-annotator.method-call-missing-expression.message = Missing expression
objective-j.annotator-messages.method-call-annotator.selector-not-found.message = Failed to find selector matching <{0}>
objective-j.annotator-messages.method-call-annotator.invalid-selector-ignored.message = Missing selector: <{0}> is ignored

#Annotator: Method declaration
objective-j.annotator-messages.method-declaration-annotator.duplicate-selector.message = Duplicate method selector in class

#Annotator: Protocol declaration
objective-j.annotator-messages.protocol-declaration.duplicate-declaration.message = Duplicate protocol <{0}> found in {1}

#Annotator: Semi colon
objective-j.annotator-messages.semi-colon-annotator.missing-semi-colon.message = Missing terminating semi-colon



#Fixes: variable declaration
objective-j.annotator-messages.variable-declaration-annotator.qname-in-var-dec.message = Cannot use qualified reference with 'var' assignment keyword
objective-j.annotator-messages.variable-declaration-annotator.assign-to-func-call.message  = Cannot assign value to function call
objective-j.annotator-messages.variable-declaration-annotator.assign-to-method-call-err.message = Cannot assign value to method call

#Fixes: Semi-colon
objective-j.intentions.add-semi-colon.prompt = Insert missing semi-colon
objective-j.intentions.remove-extraneous-semi-colon.prompt = Remove extraneous semi-colon

#Fixes: Suppress inspection
objective-j.intentions.suppress-inspection.prompt = Suppress {0} inspection {1}{2}
objective-j.intentions.suppress-inspection.for-parameter.prompt-fragment = \ for parameter "{0}"

#Fixes: alter ignore selector
objective-j.intentions.alter-ignored-selector.add-ignore-selector.prompt = Add selector "{0}" to ignored selectors list
objective-j.intentions.alter-ignored-selector.remove-ignored-selector.prompt = Remove selector "{0}" from ignored selectors list

#Fixes: Alter Ignored variable name
objective-j.intentions.alter-ignored-variable.add-ignore-var.prompt = Add variable name "{0}" to globally ignored variables list
objective-j.intentions.alter-ignored-variable.remove-ignored-var.text = Remove variable name "{0}" from globally ignored variable names list

# Fixes: Change variable type
objective-j.intentions.change-variable-type.prompt = Change variable type to '{0}'?

# Fixes; Implement missing protocol method
objective-j.intentions.missing-protocol-fix.fail-message.title = Protocol Implementation Failure
objective-j.intentions.missing-protocol-fix.fail-message.generic-message.text = Failed to create placeholder methods for protocol {0}. {1}
objective-j.intentions.missing-protocol-fix.fail-message.declaration-malformed-message.text = Implementation declaration is not well formed

# Fixes: Return type -> void
objective-j.intentions.remove-return-type.message = Method does not return a value. Set return type to void?

#Fixes: Remove extraneous string format parameter
objective-j.intentions.remove-trailing-string-format-parameter.prompt = Removing extraneous string format parameter

# Fixes: Suppress overshadowed variable inspection
objective-j.intentions.suppress-overshadowed-variable-inspection.prompt = Suppress overshadowed variable inspection in project

# Fixes: Suppress undeclared variable inspections
objective-j.intentions.suppress-undeclared-variable-inspection.prompt = Suppress undefined variable inspection for variable "{0}"

# Annotator: Function Call
objective-j.inspections.function-name-inspection.missing-function.display-name.text = Invalid function name__
objective-j.inspections.function-name-inspection.missing-function.message = Failed to find function with name: <{0}>
objective-j.inspections.function-name-inspection.function-is-ignored.message = Function <{0}> is ignored in settings
objective-j.intentions.alter-ignored-function-name.add-ignore.prompt = Add {0} to ignored functions list
objective-j.intentions.alter-ignored-function-name.remove-ignored.prompt = Remove {0} from ignored functions list

# Inspection: MethodHeaderDoesNotMatch
objective-j.inspections.method-header-match.incompatible-method-override.message = Incompatible inherited method override
objective-j.inspections.method-header-match.return-type-less-specific.message = Method return type is less specific than parent class
objective-j.inspections.method-header-match.should-have-return-type.message = Overridden method should have return type <{0}>
objective-j.inspections.method-header-match.parent-less-specific.message = Overridden parent is less specific
objective-j.inspections.method-header-match.should-have-type.message = Parameter should have type <{0}>

#Inspection: Method Returns a value
objective-j.inspections.method-return-value.must-have-type.message = Method must return a value of type: '{0}'
objective-j.inspections.method-return-value.method-expects-return-statement.message = Method expects return statement

# Inspection: Return Value Disagrement
objective-j.inspections.return-statement-disagreement.missing-value-expected.message = Return statement is missing return element. Element should be of type: <{0}>
objective-j.inspections.return-statement-disagreement.no-value-expected.message = Method with return type void should not return a value.
objective-j.inspections.return-statement-disagreement.not-all-return-value.message = Not all return statements return a value

# Inspection: String Format
objective-j.inspection.string-format.first-parameter-must-be-string.message = String with format requires first parameter to be a non-nil string
objective-j.inspection.string-format.not-enough-values.message = Not enough values for format. Expected <{0}>, found <{1}>
objective-j.inspection.string-format.too-many-values.message = Too many arguments found for string format. Expected <{0}>, found <{1}>

# Inspection: Undeclared Variable
objective-j.inspection.undec-var.ignoring.message = Ignoring possibly undefined variable
objective-j.inspection.undec-var.failed-to-find.message = Failed to find variable with name: <{0}>